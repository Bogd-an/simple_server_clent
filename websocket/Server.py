import asyncio
import websockets

from ..Message import Message, Cm
from ..Tokens import TOKEN

clients_websocket = []
clients_status    = []

async def handler(websocket):
    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
    if websocket not in clients_websocket:
        clients_websocket.append(websocket)
        clients_status.append(True)
        clients_online = clients_status.count(True)
        print(f"[üîå] –ö–ª—ñ—î–Ω—Ç –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è: {websocket.remote_address}, –∑–∞—Ä–∞–∑ {clients_online} –∫–ª—ñ—î–Ω—Ç—ñ–≤.")
        await websocket.send(Message.to_userID_crypt(str(websocket.remote_address)))
    try:
        async for message in websocket:
            msg, valid = Message.from_json_crypt(message)
            if not valid:
                print(f"[‚ùó] –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {websocket.remote_address}: {message}")
                continue
            print(f"[üì•] –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥ {websocket.remote_address}: {message}")

            # –†–æ–∑—Å–∏–ª–∫–∞ –≤—Å—ñ–º, –∫—Ä—ñ–º –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
            for client_ws, client_status in zip(clients_websocket, clients_status):
                if not client_status:
                    clients_status[clients_websocket.index(client_ws)] = True
                if client_status: # and client_ws != websocket # –ù–µ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–∑–∞–¥ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫—É
                    await client_ws.send(message)
                    print(f"[üì§] –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ {client_ws.remote_address}: {message}")
    except websockets.ConnectionClosed:
        print(f"[‚ùå] –ö–ª—ñ—î–Ω—Ç –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è: {websocket.remote_address}")
    finally:
        clients_status[clients_websocket.index(websocket)] = False
        clients_online = clients_status.count(True)
        print(f"[‚ÑπÔ∏è] –ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤: {clients_online}")

if __name__ == "__main__":
    async def main():
        async with websockets.serve(handler, "0.0.0.0", 8000):
            print("üöÄ WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ ws://0.0.0.0:8000")
            await asyncio.Future()  # —Ç—Ä–∏–º–∞–π —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–º

    asyncio.run(main())
